/**
 * Copyright 2021 IBM Corp. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { IamRequestBasedTokenManager, IamRequestOptions } from './iam-request-based-token-manager';
/** Configuration options for IAM token retrieval. */
interface Options extends IamRequestOptions {
    crTokenFilename?: string;
    iamProfileName?: string;
    iamProfileId?: string;
}
/**
 * The ContainerTokenManager retrieves a compute resource token from a file on the container. This token
 * is used to perform the necessary interactions with the IAM token service to obtain and store a suitable
 * bearer (access) token.
 */
export declare class ContainerTokenManager extends IamRequestBasedTokenManager {
    private crTokenFilename;
    private iamProfileName;
    private iamProfileId;
    /**
     *
     * Create a new [[ContainerTokenManager]] instance.
     *
     * @param {object} options Configuration options.
     * @param {string} [crTokenFilename='/var/run/secrets/tokens/vault-token'] The file containing the compute resource token.
     * @param {string} [iamProfileName] The IAM profile name associated with the compute resource token.
     * @param {string} [iamProfileId] The IAM profile ID associated with the compute resource token.
     * @param {string} [options.clientId] The `clientId` and `clientSecret` fields are used to form a "basic"
     *   authorization header for IAM token requests.
     * @param {string} [options.clientSecret] The `clientId` and `clientSecret` fields are used to form a "basic"
     *   authorization header for IAM token requests.
     * @param {string} [url='https://iam.cloud.ibm.com'] The IAM endpoint for token requests.
     * @param {boolean} [options.disableSslVerification] A flag that indicates
     *   whether verification of the token server's SSL certificate should be
     *   disabled or not.
     * @param {object<string, string>} [options.headers] Headers to be sent with every
     *   outbound HTTP requests to token services.
     * @constructor
     */
    constructor(options: Options);
    /**
     * Setter for the filename of the compute resource token.
     * @param {string} crTokenFilename A string containing a path to the CR token file
     */
    setCrTokenFilename(crTokenFilename: string): void;
    /**
     * Setter for the "profile_name" parameter to use when fetching the bearer token from the IAM token server.
     * @param {string} iamProfileName A string that makes up the iamProfileName parameter
     */
    setIamProfileName(iamProfileName: string): void;
    /**
     * Setter for the "profile_id" parameter to use when fetching the bearer token from the IAM token server.
     * @param {string} iamProfileId A string that makes up the iamProfileId parameter
     */
    setIamProfileId(iamProfileId: string): void;
    /**
     * Request an IAM token using a compute resource token.
     *
     * @returns {Promise}
     */
    protected requestToken(): Promise<any>;
}
export {};
